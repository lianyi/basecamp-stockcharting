{"version":3,"sources":["api/stock/quandlapi.js"],"names":["request","require","QUANDL_API_KEY","process","env","getStockDataUrlByName","name","console","warn","exit","now","Date","year","getFullYear","month","getMonth","date","getDate","dataUrl","toUpperCase","metaUrl","getStockData","resolve","reject","uri","err","res","body","statusCode","data","JSON","parse","quandl_error","getStockMeta","dataset","code","dataset_code","module","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,IAAMC,iBAAiBC,QAAQC,GAAR,CAAYF,cAAnC;AACA,IAAMG,wBAAwB,SAAxBA,qBAAwB,CAAUC,IAAV,EAAgB;AAC5C,MAAI,CAACJ,cAAL,EAAqB;AACnBK,YAAQC,IAAR,CAAa,gCAAb;AACAL,YAAQM,IAAR,CAAa,CAAC,CAAd;AACD;AACD,MAAMC,MAAM,IAAIC,IAAJ,EAAZ;AAAA,MAAwBC,OAAOF,IAAIG,WAAJ,EAA/B;AAAA,MAAkDC,QAAQJ,IAAIK,QAAJ,KAAiB,CAA3E;AAAA,MAA8EC,OAAON,IAAIO,OAAJ,EAArF;AACA,SAAO;AACLC,8DAAwDZ,KAAKa,WAAL,EAAxD,sBAA2FjB,cAA3F,qBAAwHU,OAAO,CAA/H,UAAoIE,KAApI,SAA6IE,IAA7I,kBAA8JJ,IAA9J,SAAsKE,KAAtK,SAA+KE,IAD1K;AAELI,8DAAwDd,KAAKa,WAAL,EAAxD;AAFK,GAAP;AAID,CAVD;;AAaA,IAAME,eAAe,SAAfA,YAAe,CAAUf,IAAV,EAAgB;AACnC,SAAO,sBAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,YAAQ,EAACwB,KAAKnB,sBAAsBC,IAAtB,EAA4BY,OAAlC,EAAR,EAAoD,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtE,UAAI,CAACF,GAAD,IAAQC,IAAIE,UAAJ,KAAmB,GAA/B,EAAoC;AAClC,YAAMC,OAAOC,KAAKC,KAAL,CAAWJ,IAAX,CAAb;AACA,YAAI,CAACE,IAAD,IAASA,KAAKG,YAAlB,EAAgC;AAC9BT,iBAAOM,IAAP;AACD,SAFD,MAEO;AACLP,kBAAQO,IAAR;AACD;AACF,OAPD,MAOO;AACLN,eAAOE,GAAP;AACD;AACF,KAXD;AAYD,GAbM,CAAP;AAcD,CAfD;;AAiBA,IAAMQ,eAAe,SAAfA,YAAe,CAAU3B,IAAV,EAAgB;AACnC,SAAO,sBAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,YAAQ,EAACwB,KAAKnB,sBAAsBC,IAAtB,EAA4Bc,OAAlC,EAAR,EACE,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClB,UAAI,CAACF,GAAD,IAAQC,IAAIE,UAAJ,KAAmB,GAA/B,EAAoC;AAClC,YAAMC,OAAOC,KAAKC,KAAL,CAAWJ,IAAX,CAAb;AACA,YAAI,CAACE,IAAD,IAASA,KAAKG,YAAlB,EAAgC;AAC9BT,iBAAOM,IAAP;AACD,SAFD,MAEO;AACLP,kBAAQ;AACNhB,kBAAMuB,KAAKK,OAAL,CAAa5B,IADb;AAEN6B,kBAAMN,KAAKK,OAAL,CAAaE;AAFb,WAAR;AAID;AACF,OAVD,MAUO;AACLb,eAAOE,GAAP;AACD;AACF,KAfH;AAgBD,GAjBM,CAAP;AAkBD,CAnBD;;AAqBAY,OAAOC,OAAP,GAAiB;AACfL,gBAAcA,YADC;AAEfZ,gBAAcA;AAFC,CAAjB","file":"quandlapi.js","sourcesContent":["'use strict';\nconst request = require('request');\n\nconst QUANDL_API_KEY = process.env.QUANDL_API_KEY;\nconst getStockDataUrlByName = function (name) {\n  if (!QUANDL_API_KEY) {\n    console.warn('missing QUANDL_API_KEY in ENV!');\n    process.exit(-1);\n  }\n  const now = new Date(), year = now.getFullYear(), month = now.getMonth() + 1, date = now.getDate();\n  return {\n    dataUrl: `https://www.quandl.com/api/v3/datasets/WIKI/${name.toUpperCase()}.json?api_key=${QUANDL_API_KEY}&start_date=${year - 1}-${month}-${date}&end_date=${year}-${month}-${date}`,\n    metaUrl: `https://www.quandl.com/api/v3/datasets/WIKI/${name.toUpperCase()}/metadata.json`\n  };\n};\n\n\nconst getStockData = function (name) {\n  return new Promise((resolve, reject) => {\n    request({uri: getStockDataUrlByName(name).dataUrl}, (err, res, body) => {\n      if (!err && res.statusCode === 200) {\n        const data = JSON.parse(body);\n        if (!data || data.quandl_error) {\n          reject(data);\n        } else {\n          resolve(data);\n        }\n      } else {\n        reject(err);\n      }\n    });\n  });\n};\n\nconst getStockMeta = function (name) {\n  return new Promise((resolve, reject) => {\n    request({uri: getStockDataUrlByName(name).metaUrl},\n      (err, res, body) => {\n        if (!err && res.statusCode === 200) {\n          const data = JSON.parse(body);\n          if (!data || data.quandl_error) {\n            reject(data);\n          } else {\n            resolve({\n              name: data.dataset.name,\n              code: data.dataset.dataset_code\n            });\n          }\n        } else {\n          reject(err);\n        }\n      });\n  });\n};\n\nmodule.exports = {\n  getStockMeta: getStockMeta,\n  getStockData: getStockData\n};\n"]}